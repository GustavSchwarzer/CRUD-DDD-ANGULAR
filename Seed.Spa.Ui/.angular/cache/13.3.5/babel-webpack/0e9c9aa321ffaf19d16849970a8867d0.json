{"ast":null,"code":"import _classCallCheck from \"C:\\\\projetos\\\\seed-dotnet6.0angular13\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\projetos\\\\seed-dotnet6.0angular13\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { ApiService } from \"../../common/services/api.service\";\nimport { GlobalService } from \"../../global.service\";\nimport { ViewModel } from '../model/viewmodel';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../common/services/api.service\";\n\nfunction MultiSelectFunnelComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"label\")(2, \"input\", 8);\n    i0.ɵɵlistener(\"ngModelChange\", function MultiSelectFunnelComponent_div_10_Template_input_ngModelChange_2_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r4);\n      var option_r2 = restoredCtx.$implicit;\n      return option_r2.checked = $event;\n    })(\"change\", function MultiSelectFunnelComponent_div_10_Template_input_change_2_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      var ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.onChange($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var option_r2 = ctx.$implicit;\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"name\", ctx_r0.ctrlNameItem);\n    i0.ɵɵpropertyInterpolate(\"value\", option_r2.id);\n    i0.ɵɵproperty(\"ngModel\", option_r2.checked);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r2.name, \" \");\n  }\n}\n\nfunction MultiSelectFunnelComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"label\")(2, \"input\", 9);\n    i0.ɵɵlistener(\"ngModelChange\", function MultiSelectFunnelComponent_div_24_Template_input_ngModelChange_2_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r8);\n      var option_funnel_r6 = restoredCtx.$implicit;\n      return option_funnel_r6.checked = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var option_funnel_r6 = ctx.$implicit;\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"name\", ctx_r1.ctrlNameItem);\n    i0.ɵɵpropertyInterpolate(\"value\", option_funnel_r6.id);\n    i0.ɵɵproperty(\"ngModel\", option_funnel_r6.checked);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_funnel_r6.name, \" \");\n  }\n}\n\nexport var MultiSelectFunnelComponent = /*#__PURE__*/(function () {\n  var MultiSelectFunnelComponent = /*#__PURE__*/function () {\n    function MultiSelectFunnelComponent(api) {\n      _classCallCheck(this, MultiSelectFunnelComponent);\n\n      this.api = api;\n      this._filter = {};\n      this.fieldFilterName = \"nome\";\n      this._filteronstop = null;\n    }\n\n    _createClass(MultiSelectFunnelComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var _this = this;\n\n        this.init();\n        var filterforEdit = this.createFiltersForEdit();\n\n        if (!this.disabledOnInit) {\n          this.getInstance();\n        } else {\n          if (filterforEdit) this.getInstance(filterforEdit);\n        }\n\n        this._notificationEmitter = GlobalService.getNotificationEmitter().subscribe(function (not) {\n          if (not.event == \"edit\" || not.event == \"create\" || not.event == \"init\") {\n            _this.init();\n          }\n\n          if (not.event == \"change\") {\n            if (not.data.dataitem == _this.dataitem) _this.getInstance(not.data.parentFilter);\n          }\n        });\n      }\n    }, {\n      key: \"init\",\n      value: function init() {\n        this._selectedTemp = [];\n        this._modelOutput = [];\n        this._datasource = [];\n        this._datasource_funnel = [];\n        this._modelInput = this.vm.model[this.ctrlName];\n        this._collectionjsonTemplate = \"\";\n      }\n    }, {\n      key: \"onSelectAllDataSource\",\n      value: function onSelectAllDataSource(e) {\n        for (var i in this._datasource) {\n          this._datasource[i].checked = this._datasourceAll;\n        }\n      }\n    }, {\n      key: \"onSelectAllDataSourceFunnel\",\n      value: function onSelectAllDataSourceFunnel(e) {\n        for (var i in this._datasource_funnel) {\n          this._datasource_funnel[i].checked = this._datasourceFunnelAll;\n        }\n      }\n    }, {\n      key: \"onFilterFunnel\",\n      value: function onFilterFunnel(e) {\n        var _this2 = this;\n\n        if (this._filteronstop) clearTimeout(this._filteronstop);\n        this._filteronstop = setTimeout(function () {\n          _this2._datasource = [];\n          var filterFunnel = {};\n          filterFunnel[_this2.fieldFilterName] = _this2._filterFunnel;\n\n          _this2.getInstance(filterFunnel);\n        }, 500);\n      }\n    }, {\n      key: \"onChange\",\n      value: function onChange(e) {}\n    }, {\n      key: \"onTransferenciaToLeft\",\n      value: function onTransferenciaToLeft() {\n        var _this3 = this;\n\n        var removeables = [];\n\n        for (var i in this._datasource) {\n          if (this._datasource[i].checked) {\n            this._datasource[i].checked = false;\n\n            this._datasource_funnel.push(this._datasource[i]);\n\n            removeables.push(this._datasource[i].id);\n          }\n        }\n\n        removeables.forEach(function (itemRemoveable) {\n          _this3._datasource = _this3._datasource.filter(function (item) {\n            return item.id != itemRemoveable;\n          });\n        });\n        this.updateModelOutputFunnel();\n        this._selectedTemp = [];\n      }\n    }, {\n      key: \"onTransferenciaToRigth\",\n      value: function onTransferenciaToRigth() {\n        var _this4 = this;\n\n        var removeables = [];\n\n        for (var i in this._datasource_funnel) {\n          if (this._datasource_funnel[i].checked) {\n            this._datasource_funnel[i].checked = false;\n\n            this._datasource.push(this._datasource_funnel[i]);\n\n            removeables.push(this._datasource_funnel[i].id);\n          }\n        }\n\n        removeables.forEach(function (itemRemoveable) {\n          _this4._datasource_funnel = _this4._datasource_funnel.filter(function (item) {\n            return item.id != itemRemoveable;\n          });\n        });\n        this.updateModelOutputFunnel();\n        this._selectedTemp = [];\n      }\n    }, {\n      key: \"updateModelOutputFunnel\",\n      value: function updateModelOutputFunnel() {\n        var _this5 = this;\n\n        this._modelOutput = [];\n\n        this._datasource_funnel.forEach(function (item) {\n          _this5._modelOutput.push(item.id);\n        });\n\n        this.serializer();\n      }\n    }, {\n      key: \"serializer\",\n      value: function serializer() {\n        this.vm.model[this.ctrlName] = this.serializeToSave();\n      }\n    }, {\n      key: \"serializeToSave\",\n      value: function serializeToSave() {\n        var items = [];\n\n        for (var item in this._modelOutput) {\n          items.push(\"{ \\\"\".concat(this.ctrlNameItem, \"\\\" : \\\"\").concat(this._modelOutput[item], \"\\\"}\"));\n        }\n\n        this._collectionjsonTemplate = \"[ \".concat(items.join(), \" ]\");\n        return JSON.parse(this._collectionjsonTemplate);\n      }\n    }, {\n      key: \"createFiltersForEdit\",\n      value: function createFiltersForEdit() {\n        var _this6 = this;\n\n        if (this._modelInput) {\n          var filters = {};\n          filters.ids = this._modelInput.map(function (item) {\n            return item[_this6.ctrlNameItem];\n          });\n          return filters.ids.length > 0 ? filters : null;\n        }\n      }\n    }, {\n      key: \"getInstance\",\n      value: function getInstance(parentFilter) {\n        var filters = Object.assign(this.datafilters || {}, parentFilter || {});\n        this.getInstanceMultiSelect(filters);\n      }\n    }, {\n      key: \"getInstanceMultiSelect\",\n      value: function getInstanceMultiSelect(filters) {\n        var _this7 = this;\n\n        this.api.setResource(this.dataitem, this.endpoint).getDataitem(filters).subscribe(function (result) {\n          _this7._datasource = [];\n\n          var _loop = function _loop(item) {\n            _this7._datasource.push({\n              id: result.dataList[item].id,\n              name: result.dataList[item].name,\n              checked: _this7._modelInput ? _this7._modelInput.filter(function (selecteds) {\n                return selecteds[_this7.ctrlNameItem] == result.dataList[item].id;\n              }).length > 0 : false\n            });\n          };\n\n          for (var item in result.dataList) {\n            _loop(item);\n          }\n\n          _this7.onTransferenciaToLeft();\n        });\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        if (this._notificationEmitter) this._notificationEmitter.unsubscribe();\n      }\n    }]);\n\n    return MultiSelectFunnelComponent;\n  }();\n\n  MultiSelectFunnelComponent.ɵfac = function MultiSelectFunnelComponent_Factory(t) {\n    return new (t || MultiSelectFunnelComponent)(i0.ɵɵdirectiveInject(i1.ApiService));\n  };\n\n  MultiSelectFunnelComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MultiSelectFunnelComponent,\n    selectors: [[\"multiselect-funnel\"]],\n    inputs: {\n      dataitem: \"dataitem\",\n      datafilters: \"datafilters\",\n      vm: \"vm\",\n      endpoint: \"endpoint\",\n      ctrlName: \"ctrlName\",\n      ctrlNameItem: \"ctrlNameItem\",\n      disabledOnInit: \"disabledOnInit\",\n      fieldFilterName: \"fieldFilterName\"\n    },\n    decls: 25,\n    vars: 5,\n    consts: [[1, \"custom-funnel-row\"], [1, \"col-md-5\", \"custom-funnel-column\"], [\"type\", \"text\", \"name\", \"filter_funnel\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\", \"keyup\"], [1, \"checkbox\"], [\"type\", \"checkbox\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"class\", \"checkbox\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-2\", \"custom-funnel-btn\"], [\"type\", \"button\", 1, \"btn\", \"btn-default\", 3, \"click\"], [\"type\", \"checkbox\", 3, \"ngModel\", \"name\", \"value\", \"ngModelChange\", \"change\"], [\"type\", \"checkbox\", 3, \"ngModel\", \"name\", \"value\", \"ngModelChange\"]],\n    template: function MultiSelectFunnelComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"section\", 1)(2, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function MultiSelectFunnelComponent_Template_input_ngModelChange_2_listener($event) {\n          return ctx._filterFunnel = $event;\n        })(\"keyup\", function MultiSelectFunnelComponent_Template_input_keyup_2_listener($event) {\n          return ctx.onFilterFunnel($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"label\")(5, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function MultiSelectFunnelComponent_Template_input_ngModelChange_5_listener($event) {\n          return ctx._datasourceAll = $event;\n        })(\"change\", function MultiSelectFunnelComponent_Template_input_change_5_listener($event) {\n          return ctx.onSelectAllDataSource($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(6, \" Todos \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(7, \"hr\");\n        i0.ɵɵelementStart(8, \"label\");\n        i0.ɵɵtext(9, \"Disponiveis:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(10, MultiSelectFunnelComponent_div_10_Template, 4, 4, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"section\", 6)(12, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function MultiSelectFunnelComponent_Template_button_click_12_listener() {\n          return ctx.onTransferenciaToLeft();\n        });\n        i0.ɵɵtext(13, \" >> \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function MultiSelectFunnelComponent_Template_button_click_14_listener() {\n          return ctx.onTransferenciaToRigth();\n        });\n        i0.ɵɵtext(15, \" << \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"section\", 1)(17, \"div\", 3)(18, \"label\")(19, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function MultiSelectFunnelComponent_Template_input_ngModelChange_19_listener($event) {\n          return ctx._datasourceFunnelAll = $event;\n        })(\"change\", function MultiSelectFunnelComponent_Template_input_change_19_listener($event) {\n          return ctx.onSelectAllDataSourceFunnel($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(20, \" Todos \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(21, \"hr\");\n        i0.ɵɵelementStart(22, \"label\");\n        i0.ɵɵtext(23, \"Selecionados:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(24, MultiSelectFunnelComponent_div_24_Template, 4, 4, \"div\", 5);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx._filterFunnel);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx._datasourceAll);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx._datasource);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngModel\", ctx._datasourceFunnelAll);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx._datasource_funnel);\n      }\n    },\n    encapsulation: 2\n  });\n  return MultiSelectFunnelComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}