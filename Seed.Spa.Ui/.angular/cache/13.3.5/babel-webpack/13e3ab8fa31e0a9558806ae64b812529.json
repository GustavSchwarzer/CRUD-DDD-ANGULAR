{"ast":null,"code":"import _classCallCheck from \"C:\\\\projetos\\\\seed-dotnet6.0angular13\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\projetos\\\\seed-dotnet6.0angular13\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask';\nimport { CacheService } from '../../common/services/cache.service';\nimport { ECacheType } from '../../common/type-cache.enum';\nimport * as i0 from \"@angular/core\";\nexport var ServiceBase = /*#__PURE__*/(function () {\n  var ServiceBase = /*#__PURE__*/function () {\n    function ServiceBase() {\n      _classCallCheck(this, ServiceBase);\n    }\n\n    _createClass(ServiceBase, [{\n      key: \"getInfoGrid\",\n      value: function getInfoGrid(infos) {\n        var list = [];\n\n        for (var key in infos) {\n          var info = infos[key];\n          if (info.list == true) list.push({\n            key: key,\n            info: info\n          });\n        }\n\n        return list;\n      }\n    }, {\n      key: \"objectToArray\",\n      value: function objectToArray(infos) {\n        var list = [];\n\n        for (var key in infos) {\n          var info = infos[key];\n          list.push(info);\n        }\n\n        return list;\n      }\n    }, {\n      key: \"objectToArrayWithKeys\",\n      value: function objectToArrayWithKeys(infos) {\n        var list = [];\n\n        for (var key in infos) {\n          var info = infos[key];\n          list.push({\n            key: key,\n            infos: info\n          });\n        }\n\n        return list;\n      }\n    }, {\n      key: \"pagingConfig\",\n      value: function pagingConfig(modelFilter, pageConfig) {\n        return Object.assign(modelFilter, {\n          PageIndex: pageConfig.PageIndex,\n          PageSize: pageConfig.PageSize,\n          IsPagination: true\n        });\n      }\n    }, {\n      key: \"orderByConfig\",\n      value: function orderByConfig(modelFilter, order) {\n        return Object.assign(modelFilter, {\n          OrderByType: order.asc ? \"OrderBy\" : \"OrderByDescending\",\n          OrderFields: [order.field]\n        });\n      }\n    }, {\n      key: \"detectChanges\",\n      value: function detectChanges(changeDetector) {\n        if (this._interval) return;\n        changeDetector.detach();\n        this._interval = setInterval(function () {\n          changeDetector.reattach();\n\n          if (changeDetector && !changeDetector.destroyed) {\n            changeDetector.detectChanges();\n          }\n\n          changeDetector.detach();\n        }, 250);\n      }\n    }, {\n      key: \"detectChangesStop\",\n      value: function detectChangesStop() {\n        if (this._interval) clearInterval(this._interval);\n      }\n    }, {\n      key: \"masksConfig\",\n      value: function masksConfig() {\n        var decimalMask = createNumberMask({\n          prefix: '',\n          allowDecimal: true,\n          includeThousandsSeparator: false\n        });\n        var moneyMask = createNumberMask({\n          prefix: '',\n          suffix: '',\n          decimalLimit: 2,\n          allowDecimal: true,\n          requireDecimal: true,\n          thousandsSeparatorSymbol: '.',\n          decimalSymbol: ','\n        });\n        return {\n          maskUF: [/\\D/, /\\D/],\n          maskCEP: [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/],\n          maskCPF: [/\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/],\n          maskCNPJ: [/\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/],\n          maskDDD: ['(', /\\d/, /\\d/, ')'],\n          maskOnlyTelefone: [/\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/, /\\d/],\n          maskTelefone: ['(', /\\d/, /\\d/, ')', /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/, /\\d/],\n          maskCelular: ['(', /\\d/, /\\d/, ')', /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/],\n          maskHorario: [/\\d/, /\\d/, ':', /\\d/, /\\d/],\n          cartaoCredito: [/\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/],\n          maskDecimal: decimalMask,\n          maskMoney: moneyMask\n        };\n      }\n    }, {\n      key: \"tagTransformCollectionToShow\",\n      value: function tagTransformCollectionToShow(config) {\n        if (!config.model) return null;\n        return config.model.map(function (item) {\n          return {\n            display: item[config.ctrlNameItemDisplay],\n            value: item[config.ctrlNameItem],\n            readonly: config.readOnly\n          };\n        });\n      }\n    }, {\n      key: \"tagTransformToShow\",\n      value: function tagTransformToShow(value, readonly) {\n        var tagItems = value ? value.split(',') : value;\n        var tags = [];\n\n        if (tagItems) {\n          for (var i = 0; i < tagItems.length; i++) {\n            tags.push({\n              display: tagItems[i],\n              value: tagItems[i],\n              readonly: readonly\n            });\n          }\n        }\n\n        return tags;\n      }\n    }, {\n      key: \"tagTransformCollectionToSave\",\n      value: function tagTransformCollectionToSave(config) {\n        return config.model.map(function (item) {\n          var itemJson = {};\n          itemJson[config.ctrlNameItem] = 0;\n          itemJson[config.ctrlNameItemDisplay] = item.display;\n          return itemJson;\n        });\n      }\n    }, {\n      key: \"tagTransformToSave\",\n      value: function tagTransformToSave(value) {\n        if (value) {\n          return value.map(function (item) {\n            return item.value;\n          }).toString();\n        }\n\n        return value;\n      }\n    }, {\n      key: \"mergeInfoFields\",\n      value: function mergeInfoFields(defaultInfosFields, moreInfosFields) {\n        var orderByMore = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        var dataArrayDefault = this.objectToArrayWithKeys(defaultInfosFields);\n        var objMerged = {};\n\n        if (moreInfosFields) {\n          var dataArrayMore = this.objectToArrayWithKeys(moreInfosFields);\n          dataArrayMore.forEach(function (_elemetMore) {\n            dataArrayDefault = dataArrayDefault.map(function (_elemetDefault) {\n              if (_elemetDefault.key == _elemetMore.key) return _elemetMore;else {\n                return _elemetDefault;\n              }\n            });\n            var dataArrayDefaultExists = dataArrayDefault.filter(function (_elemetDefault) {\n              return _elemetDefault.key == _elemetMore.key;\n            });\n            if (dataArrayDefaultExists.length == 0) dataArrayDefault.push(_elemetMore);\n          });\n\n          if (orderByMore) {\n            dataArrayMore.forEach(function (item) {\n              objMerged[item.key] = item.infos;\n            });\n          }\n        }\n\n        if (!orderByMore) {\n          dataArrayDefault.forEach(function (item) {\n            objMerged[item.key] = item.infos;\n          });\n        }\n\n        return objMerged;\n      }\n    }, {\n      key: \"saveFilters\",\n      value: function saveFilters(modelFilter, key) {\n        CacheService.add(key, JSON.stringify(modelFilter), ECacheType.LOCAL);\n        return modelFilter;\n      }\n    }, {\n      key: \"getFilters\",\n      value: function getFilters(key) {\n        return JSON.parse(CacheService.get(key, ECacheType.LOCAL));\n      }\n    }, {\n      key: \"ExtractDate\",\n      value: function ExtractDate(data) {\n        return new Date(data.split('/')[2].split(' ')[0], data.split('/')[1] - 1, data.split('/')[0], data.split('/')[2].split(' ')[1].split(':')[0], data.split('/')[2].split(' ')[1].split(':')[1]);\n      }\n    }, {\n      key: \"OnHide\",\n      value: function OnHide(saveModal, editModal, hideFunction) {\n        editModal.onHide.subscribe(function () {\n          hideFunction();\n        });\n        saveModal.onHide.subscribe(function () {\n          hideFunction();\n        });\n      }\n    }, {\n      key: \"convertToUtc\",\n      value: function convertToUtc(value) {\n        if (value.indexOf('T') == -1) {\n          var _valor = value;\n          var time = _valor.split('/')[2].split(' ').length > 1 ? \"T\" + _valor.split('/')[2].split(' ')[1] + \":00Z\" : null;\n\n          var year = _valor.split('/')[2].split(' ')[0];\n\n          var month = _valor.split('/')[1];\n\n          var day = _valor.split('/')[0];\n\n          var valor = year + \"-\" + month + \"-\" + day + time;\n          return valor;\n        }\n\n        return value;\n      }\n    }]);\n\n    return ServiceBase;\n  }();\n\n  ServiceBase.ɵfac = function ServiceBase_Factory(t) {\n    return new (t || ServiceBase)();\n  };\n\n  ServiceBase.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ServiceBase,\n    factory: ServiceBase.ɵfac\n  });\n  return ServiceBase;\n})();","map":null,"metadata":{},"sourceType":"module"}