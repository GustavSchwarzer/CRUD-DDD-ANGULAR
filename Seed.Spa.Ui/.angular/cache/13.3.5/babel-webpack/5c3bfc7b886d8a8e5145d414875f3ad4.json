{"ast":null,"code":"import _classCallCheck from \"C:\\\\projetos\\\\seed-dotnet6.0angular13\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\projetos\\\\seed-dotnet6.0angular13\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar MaskInputDirective_1, _a;\n\nimport { Directive, ElementRef, Renderer, Input, HostListener } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nvar MaskInputDirective = MaskInputDirective_1 = /*#__PURE__*/function () {\n  function MaskInputDirective(_elemetRef, _renderer) {\n    _classCallCheck(this, MaskInputDirective);\n\n    this._elemetRef = _elemetRef;\n    this._renderer = _renderer;\n  }\n\n  _createClass(MaskInputDirective, [{\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this._elemetRef.nativeElement.value = null;\n\n      if (value) {\n        this._elemetRef.nativeElement.value = value;\n      }\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n  }, {\n    key: \"onKeyup\",\n    value: function onKeyup($event) {\n      if (this.mask == \"\") return;\n      var valor = $event.target.value.replace(/\\D/g, ''); // retorna caso pressionado backspace\n\n      if ($event.keyCode === 8) {\n        this.onChange(valor);\n        return;\n      }\n\n      var valorComMascara = this.aplicarMascara(valor);\n      $event.target.value = valorComMascara;\n      this.onChange(valorComMascara);\n    }\n  }, {\n    key: \"aplicarMascara\",\n    value: function aplicarMascara(valor) {\n      if (!this.mask) return;\n      var pad = this.mask.toString().replace(/\\D/g, '').replace(/9/g, '_');\n      var valorMask = valor + pad.substring(0, pad.length - valor.length);\n\n      if (valor.length <= pad.length) {\n        this.onChange(valor);\n      }\n\n      var valorMaskPos = 0;\n      valor = '';\n\n      for (var i = 0; i < this.mask.length; i++) {\n        if (isNaN(parseInt(this.mask.charAt(i)))) {\n          valor += this.mask.charAt(i);\n        } else {\n          valor += valorMask[valorMaskPos++];\n        }\n      }\n\n      if (valor.indexOf('_') > -1) {\n        valor = valor.substr(0, valor.indexOf('_'));\n      }\n\n      return valor;\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur($event) {\n      if ($event.target.value.length === this.mask.length) {\n        return;\n      }\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus($event) {}\n  }]);\n\n  return MaskInputDirective;\n}();\n\n__decorate([Input('maski'), __metadata(\"design:type\", String)], MaskInputDirective.prototype, \"mask\", void 0);\n\n__decorate([HostListener('keyup', ['$event']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], MaskInputDirective.prototype, \"onKeyup\", null);\n\n__decorate([HostListener('blur', ['$event']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], MaskInputDirective.prototype, \"onBlur\", null);\n\n__decorate([HostListener('focus', ['$event']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], MaskInputDirective.prototype, \"onFocus\", null);\n\nMaskInputDirective = MaskInputDirective_1 = __decorate([Directive({\n  selector: '[maski]',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: MaskInputDirective_1,\n    multi: true\n  }]\n}), __metadata(\"design:paramtypes\", [ElementRef, typeof (_a = typeof Renderer !== \"undefined\" && Renderer) === \"function\" ? _a : Object])], MaskInputDirective);\nexport { MaskInputDirective };","map":null,"metadata":{},"sourceType":"module"}