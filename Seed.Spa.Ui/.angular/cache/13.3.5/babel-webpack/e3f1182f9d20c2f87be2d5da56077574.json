{"ast":null,"code":"import _classCallCheck from \"C:\\\\projetos\\\\seed-dotnet6.0angular13\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\projetos\\\\seed-dotnet6.0angular13\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { ElementRef, EventEmitter, SimpleChanges } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport var NestabaleTreeComponent = /*#__PURE__*/(function () {\n  var NestabaleTreeComponent = /*#__PURE__*/function () {\n    function NestabaleTreeComponent(el) {\n      _classCallCheck(this, NestabaleTreeComponent);\n\n      this.el = el;\n      this.change = new EventEmitter();\n    }\n\n    _createClass(NestabaleTreeComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {}\n    }, {\n      key: \"ngOnChanges\",\n      value: function ngOnChanges(changes) {}\n    }, {\n      key: \"onChangeNestable\",\n      value: function onChangeNestable(e) {\n        this.change.emit(e);\n      }\n    }]);\n\n    return NestabaleTreeComponent;\n  }();\n\n  NestabaleTreeComponent.ɵfac = function NestabaleTreeComponent_Factory(t) {\n    return new (t || NestabaleTreeComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  NestabaleTreeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NestabaleTreeComponent,\n    selectors: [[\"nestable-tree\"]],\n    inputs: {\n      data: \"data\",\n      id: \"id\"\n    },\n    outputs: {\n      change: \"change\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 2,\n    vars: 2,\n    consts: [[1, \"dd\", 3, \"id\", \"nestable\", \"change\"], [1, \"dd-list\", \"root\"]],\n    template: function NestabaleTreeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵlistener(\"change\", function NestabaleTreeComponent_Template_div_change_0_listener($event) {\n          return ctx.onChangeNestable($event);\n        });\n        i0.ɵɵelement(1, \"ol\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"id\", ctx.id)(\"nestable\", ctx.data);\n      }\n    },\n    encapsulation: 2\n  });\n  return NestabaleTreeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}