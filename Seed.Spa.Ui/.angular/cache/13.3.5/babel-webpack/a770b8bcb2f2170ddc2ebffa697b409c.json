{"ast":null,"code":"import _classCallCheck from \"C:\\\\projetos\\\\seed-dotnet6.0angular13\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\projetos\\\\seed-dotnet6.0angular13\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar _a;\n\nimport { Directive, ElementRef, Renderer, Input } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { ApiService } from '../services/api.service';\nimport { GlobalService } from '../../global.service';\n\nvar DataSourceShowDirective = /*#__PURE__*/function () {\n  function DataSourceShowDirective(_elemetRef, _renderer, api, ngModel) {\n    _classCallCheck(this, DataSourceShowDirective);\n\n    this._elemetRef = _elemetRef;\n    this._renderer = _renderer;\n    this.api = api;\n    this.ngModel = ngModel;\n  }\n\n  _createClass(DataSourceShowDirective, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this = this;\n\n      this.datasource(this._elemetRef.nativeElement);\n      GlobalService.notification.subscribe(function (not) {\n        if (not.event == \"create\" || not.event == \"edit\") {\n          _this.datasource(_this._elemetRef.nativeElement);\n        }\n\n        if (not.event == \"change\") {\n          if (not.data.dataitem == _this.dataitem) _this.datasource(_this._elemetRef.nativeElement, not.data.parentFilter);\n        }\n      });\n    }\n  }, {\n    key: \"datasource\",\n    value: function datasource(el, parentFilter) {\n      var filters = Object.assign(this.datafilters || {}, parentFilter || {});\n      this.api.setResource(this.dataitem, this.endpoint).getDataitem(filters).subscribe(function (result) {\n        if (result.dataList.length == 1) {\n          el.style.display = 'none';\n        }\n      });\n    }\n  }]);\n\n  return DataSourceShowDirective;\n}();\n\n__decorate([Input(), __metadata(\"design:type\", String)], DataSourceShowDirective.prototype, \"dataitem\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], DataSourceShowDirective.prototype, \"endpoint\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], DataSourceShowDirective.prototype, \"datafilters\", void 0);\n\nDataSourceShowDirective = __decorate([Directive({\n  selector: '[datasource-show]',\n  providers: [NgModel]\n}), __metadata(\"design:paramtypes\", [ElementRef, typeof (_a = typeof Renderer !== \"undefined\" && Renderer) === \"function\" ? _a : Object, ApiService, NgModel])], DataSourceShowDirective);\nexport { DataSourceShowDirective };","map":null,"metadata":{},"sourceType":"module"}