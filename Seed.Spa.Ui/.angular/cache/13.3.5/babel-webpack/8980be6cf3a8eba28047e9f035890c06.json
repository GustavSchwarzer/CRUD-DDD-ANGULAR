{"ast":null,"code":"import _classCallCheck from \"C:\\\\projetos\\\\seed-dotnet6.0angular13\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\projetos\\\\seed-dotnet6.0angular13\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { ChangeDetectorRef } from '@angular/core';\nimport { GlobalService } from '../../global.service';\nimport { ViewModel } from 'src/app/common/model/viewmodel';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from 'src/app/common/services/api.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/common/services/api.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../directives/select-datasource.directive\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../pipes/traduction.pipe\";\nimport * as i7 from \"../pipes/navigation-property.pipe\";\n\nfunction ListValueComponent_tr_31_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"navigationProperty\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"navigationProperty\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"span\", 14);\n    i0.ɵɵlistener(\"click\", function ListValueComponent_tr_31_Template_span_click_8_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r3);\n      var item_r1 = restoredCtx.$implicit;\n      var ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.removeItem(item_r1[ctx_r2.ctrlFieldValue]);\n    });\n    i0.ɵɵpipe(9, \"traduction\");\n    i0.ɵɵelement(10, \"i\", 15);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    var item_r1 = ctx.$implicit;\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(3, 3, item_r1, ctx_r0.ctrlFieldDescription));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(6, 6, item_r1, ctx_r0.ctrlFieldValue));\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"title\", i0.ɵɵpipeBind2(9, 9, ctx_r0.vm.infos, \"Excluir\"));\n  }\n}\n\nexport var ListValueComponent = /*#__PURE__*/(function () {\n  var ListValueComponent = /*#__PURE__*/function () {\n    function ListValueComponent(route, router, ref, api) {\n      _classCallCheck(this, ListValueComponent);\n\n      this.route = route;\n      this.router = router;\n      this.ref = ref;\n      this.api = api;\n      this.formComponent = {};\n    }\n\n    _createClass(ListValueComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        this.ctrlFieldDescription = this.ctrlFieldDescription || \"description\";\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {}\n    }, {\n      key: \"addItem\",\n      value: function addItem() {\n        var _this = this;\n\n        if (this.isValid()) {\n          var filter = Object.assign(this.datafilters || {});\n          filter[this.selectFieldKey] = this.formComponent[this.ctrlFieldKey];\n          this.api.setResource(this.selectDataItem).getDataitem(filter).subscribe(function (data) {\n            _this.setValue(_this.formComponent, _this.ctrlFieldDescription, data.dataList[0].name);\n\n            _this.vm.model[_this.ctrlName].push(Object.assign({}, _this.formComponent));\n\n            _this.formComponent[_this.ctrlFieldValue] = '';\n          });\n        }\n      }\n    }, {\n      key: \"removeItem\",\n      value: function removeItem(Valor) {\n        var _this2 = this;\n\n        this.vm.model[this.ctrlName] = this.vm.model[this.ctrlName].filter(function (obj) {\n          return obj[_this2.ctrlFieldValue] !== Valor;\n        });\n      }\n    }, {\n      key: \"setValue\",\n      value: function setValue(component, field, valor) {\n        if (field.includes('.')) {\n          var node = {};\n\n          for (var i = 0; i < field.split('.').length; i++) {\n            node = field.split('.')[i];\n\n            if (component[node] == undefined) {\n              component[node] = {};\n            }\n\n            if (i < field.split('.').length - 1) {\n              component = component[node];\n            } else {\n              component[node] = valor;\n            }\n          }\n        } else {\n          component[field] = valor;\n        }\n      }\n    }, {\n      key: \"isValid\",\n      value: function isValid() {\n        var _this3 = this;\n\n        if (this.formComponent[this.ctrlFieldKey] == undefined || this.formComponent[this.ctrlFieldKey] == '') {\n          GlobalService.messageShow(\"Selecione um item no campo \" + this.selectLabelTitle + ' para adicionar o registro');\n          return false;\n        }\n\n        if (this.formComponent[this.ctrlFieldValue] == undefined || this.formComponent[this.ctrlFieldValue] == '') {\n          GlobalService.messageShow(\"Informe o campo \" + this.inputLabelTitle + ' para adicionar o registro');\n          return false;\n        }\n\n        var item = this.vm.model[this.ctrlName].filter(function (obj) {\n          return obj[_this3.ctrlFieldValue] == _this3.formComponent[_this3.ctrlFieldValue];\n        });\n\n        if (item[0]) {\n          GlobalService.messageShow(\"Item já foi adicionado na lista\");\n          return false;\n        }\n\n        return true;\n      }\n    }]);\n\n    return ListValueComponent;\n  }();\n\n  ListValueComponent.ɵfac = function ListValueComponent_Factory(t) {\n    return new (t || ListValueComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.ApiService));\n  };\n\n  ListValueComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ListValueComponent,\n    selectors: [[\"list-value\"]],\n    inputs: {\n      vm: \"vm\",\n      datafilters: \"datafilters\",\n      ctrlName: \"ctrlName\",\n      ctrlFieldKey: \"ctrlFieldKey\",\n      ctrlFieldValue: \"ctrlFieldValue\",\n      ctrlFieldDescription: \"ctrlFieldDescription\",\n      inputLabelTitle: \"inputLabelTitle\",\n      selectLabelTitle: \"selectLabelTitle\",\n      selectDataItem: \"selectDataItem\",\n      selectFieldKey: \"selectFieldKey\",\n      selectFieldDescription: \"selectFieldDescription\"\n    },\n    decls: 32,\n    vars: 16,\n    consts: [[1, \"col-md-12\"], [1, \"form-group\"], [1, \"mr-1\"], [\"datasource\", \"\", \"name\", \"selectDataItem\", 1, \"form-control\", 3, \"ngModel\", \"dataitem\", \"fieldFilterName\", \"datafilters\", \"ngModelChange\"], [1, \"form-row\"], [1, \"col\"], [\"name\", \"limitRuleValue\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-auto\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-primary\", 3, \"click\"], [1, \"fa\", \"fa-plus\"], [1, \"table\", \"table-bordered\", \"table-hover\", \"table-stripped\"], [\"width\", \"1%\"], [1, \"thead-light\"], [4, \"ngFor\", \"ngForOf\"], [1, \"text-danger\", \"cursor\", 3, \"title\", \"click\"], [1, \"fa\", \"fa-trash\"]],\n    template: function ListValueComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"label\", 2);\n        i0.ɵɵtext(3);\n        i0.ɵɵpipe(4, \"traduction\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"select\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function ListValueComponent_Template_select_ngModelChange_5_listener($event) {\n          return ctx.formComponent[ctx.ctrlFieldKey] = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"section\", 0)(7, \"div\", 1)(8, \"label\", 2);\n        i0.ɵɵtext(9);\n        i0.ɵɵpipe(10, \"traduction\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 4)(12, \"div\", 5)(13, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function ListValueComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.formComponent[ctx.ctrlFieldValue] = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\", 7)(15, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function ListValueComponent_Template_button_click_15_listener() {\n          return ctx.addItem();\n        });\n        i0.ɵɵelement(16, \"i\", 9);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(17, \"section\", 0)(18, \"table\", 10)(19, \"colgroup\");\n        i0.ɵɵelement(20, \"col\")(21, \"col\")(22, \"col\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"thead\", 12)(24, \"tr\")(25, \"th\");\n        i0.ɵɵtext(26);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"th\");\n        i0.ɵɵtext(28);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(29, \"th\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(30, \"tbody\");\n        i0.ɵɵtemplate(31, ListValueComponent_tr_31_Template, 11, 12, \"tr\", 13);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(4, 10, ctx.vm.infos, ctx.selectLabelTitle));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.formComponent[ctx.ctrlFieldKey])(\"dataitem\", ctx.selectDataItem)(\"fieldFilterName\", ctx.selectFieldDescription)(\"datafilters\", ctx.datafilters);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(10, 13, ctx.vm.infos, ctx.inputLabelTitle));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.formComponent[ctx.ctrlFieldValue]);\n        i0.ɵɵadvance(13);\n        i0.ɵɵtextInterpolate(ctx.selectLabelTitle);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.inputLabelTitle);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.vm.model[ctx.ctrlName]);\n      }\n    },\n    directives: [i3.SelectControlValueAccessor, i4.DataSourceDirective, i3.NgControlStatus, i3.NgModel, i3.DefaultValueAccessor, i5.NgForOf],\n    pipes: [i6.TraductionPipe, i7.NavigationPropertyPipe],\n    encapsulation: 2\n  });\n  return ListValueComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}