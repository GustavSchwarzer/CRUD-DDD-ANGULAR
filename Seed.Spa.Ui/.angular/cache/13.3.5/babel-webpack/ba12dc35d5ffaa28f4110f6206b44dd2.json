{"ast":null,"code":"import _classCallCheck from \"C:\\\\projetos\\\\seed-dotnet6.0angular13\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\projetos\\\\seed-dotnet6.0angular13\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { ElementRef, EventEmitter } from '@angular/core';\nimport { GlobalService } from \"../../global.service\";\nimport * as i0 from \"@angular/core\";\nexport var EditorHtmlDiretive = /*#__PURE__*/(function () {\n  var EditorHtmlDiretive = /*#__PURE__*/function () {\n    function EditorHtmlDiretive(el) {\n      _classCallCheck(this, EditorHtmlDiretive);\n\n      this.el = el;\n      this.editorKeyup = new EventEmitter();\n    }\n\n    _createClass(EditorHtmlDiretive, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var _this = this;\n\n        this.render();\n        this._notificationEmitter = GlobalService.getNotificationEmitter().subscribe(function (not) {\n          if (not.event == \"edit\" || not.event == \"create\") {\n            var element = $(_this.el.nativeElement);\n            var selector = element.attr(\"editorhtml\");\n            var name = element.attr(\"name\");\n\n            if (tinymce.get(selector)) {\n              if (not.event == \"edit\") tinymce.get(selector).getBody().innerHTML = not.data.model[name];\n              if (not.event == \"create\") tinymce.get(selector).getBody().innerHTML = \"\";\n            }\n          }\n        });\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var element = $(this.el.nativeElement);\n        setTimeout(function () {\n          tinymce.init({\n            selector: '[editorhtml=' + element.attr(\"editorhtml\") + ']'\n          });\n        }, 1000); //tinymce.init({\n        //    selector: '[editorhtml=' + element.attr(\"editorhtml\") + ']',\n        //    plugins: ['link','lists', 'advlist', 'code', 'image', 'fullscreen'],\n        //    //skin_url: '/assets/css/skins/lightgray',\n        //    setup: (editor : any) => {\n        //        editor.on('change', () => {\n        //            const content = editor.getContent();\n        //            this.editor = editor;\n        //            this.editorKeyup.emit(content);\n        //          });\n        //    }\n        //});\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        if (tinymce) tinymce.remove(this.editor);\n        if (this._notificationEmitter) this._notificationEmitter.unsubscribe();\n      }\n    }]);\n\n    return EditorHtmlDiretive;\n  }();\n\n  EditorHtmlDiretive.ɵfac = function EditorHtmlDiretive_Factory(t) {\n    return new (t || EditorHtmlDiretive)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  EditorHtmlDiretive.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: EditorHtmlDiretive,\n    selectors: [[\"\", \"editorhtml\", \"\"]],\n    outputs: {\n      editorKeyup: \"editorKeyup\"\n    },\n    features: [i0.ɵɵProvidersFeature([NgModel])]\n  });\n  return EditorHtmlDiretive;\n})();","map":null,"metadata":{},"sourceType":"module"}