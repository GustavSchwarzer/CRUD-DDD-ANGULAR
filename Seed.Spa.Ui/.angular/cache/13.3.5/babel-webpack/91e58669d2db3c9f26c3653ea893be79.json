{"ast":null,"code":"import _classCallCheck from \"C:\\\\projetos\\\\seed-dotnet6.0angular13\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\projetos\\\\seed-dotnet6.0angular13\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { ViewModel } from '../model/viewmodel';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"angular2-text-mask\";\n\nvar _c0 = function _c0(a0) {\n  return {\n    mask: a0\n  };\n};\n\nfunction CpfCnpjComponent_input_8_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input\", 6);\n    i0.ɵɵlistener(\"ngModelChange\", function CpfCnpjComponent_input_8_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      var ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.vm.model[ctx_r2.fieldName] = $event;\n    })(\"change\", function CpfCnpjComponent_input_8_Template_input_change_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      var ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onChangeCpf($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵpropertyInterpolate(\"name\", ctx_r0.fieldName);\n    i0.ɵɵpropertyInterpolate(\"formControlName\", ctx_r0.fieldName);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.vm.model[ctx_r0.fieldName])(\"textMask\", i0.ɵɵpureFunction1(4, _c0, ctx_r0.vm.masks.maskCPF));\n  }\n}\n\nfunction CpfCnpjComponent_input_9_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input\", 6);\n    i0.ɵɵlistener(\"ngModelChange\", function CpfCnpjComponent_input_9_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      var ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.vm.model[ctx_r5.fieldName] = $event;\n    })(\"change\", function CpfCnpjComponent_input_9_Template_input_change_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      var ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.onChangeCnpj($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵpropertyInterpolate(\"name\", ctx_r1.fieldName);\n    i0.ɵɵpropertyInterpolate(\"formControlName\", ctx_r1.fieldName);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.vm.model[ctx_r1.fieldName])(\"textMask\", i0.ɵɵpureFunction1(4, _c0, ctx_r1.vm.masks.maskCNPJ));\n  }\n}\n\nvar _c1 = function _c1() {\n  return {\n    standalone: true\n  };\n};\n\nexport var CpfCnpjComponent = /*#__PURE__*/(function () {\n  var CpfCnpjComponent = /*#__PURE__*/function () {\n    function CpfCnpjComponent() {\n      _classCallCheck(this, CpfCnpjComponent);\n    }\n\n    _createClass(CpfCnpjComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        this.tpCTRLcpfCnpj = 1;\n      }\n    }, {\n      key: \"onChangeTipo\",\n      value: function onChangeTipo(e) {\n        if (this.tpCTRLcpfCnpj == 1) this.vm.model[this.fieldName] = this.cpf;else {\n          this.vm.model[this.fieldName] = this.cnpj;\n        }\n      }\n    }, {\n      key: \"onChangeCpf\",\n      value: function onChangeCpf(e) {\n        this.cpf = this.vm.model[this.fieldName];\n      }\n    }, {\n      key: \"onChangeCnpj\",\n      value: function onChangeCnpj(e) {\n        this.cnpj = this.vm.model[this.fieldName];\n      }\n    }]);\n\n    return CpfCnpjComponent;\n  }();\n\n  CpfCnpjComponent.ɵfac = function CpfCnpjComponent_Factory(t) {\n    return new (t || CpfCnpjComponent)();\n  };\n\n  CpfCnpjComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CpfCnpjComponent,\n    selectors: [[\"cpf-cnpj\"]],\n    inputs: {\n      vm: \"vm\",\n      fieldName: \"fieldName\",\n      isRequired: \"isRequired\"\n    },\n    decls: 10,\n    vars: 11,\n    consts: [[1, \"form-group\", 3, \"formGroup\"], [1, \"input-group\"], [1, \"input-group-prepend\"], [1, \"input-group-text\"], [\"type\", \"radio\", \"name\", \"tpCTRLcpfCnpj\", 3, \"ngModel\", \"value\", \"ngModelOptions\", \"ngModelChange\", \"change\"], [\"type\", \"text\", \"class\", \"form-control\", \"required\", \"{isRequired}\", 3, \"ngModel\", \"name\", \"formControlName\", \"textMask\", \"ngModelChange\", \"change\", 4, \"ngIf\"], [\"type\", \"text\", \"required\", \"{isRequired}\", 1, \"form-control\", 3, \"ngModel\", \"name\", \"formControlName\", \"textMask\", \"ngModelChange\", \"change\"]],\n    template: function CpfCnpjComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function CpfCnpjComponent_Template_input_ngModelChange_4_listener($event) {\n          return ctx.tpCTRLcpfCnpj = $event;\n        })(\"change\", function CpfCnpjComponent_Template_input_change_4_listener($event) {\n          return ctx.onChangeTipo($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(5, \"\\xA0CPF ou \\xA0 \");\n        i0.ɵɵelementStart(6, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function CpfCnpjComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.tpCTRLcpfCnpj = $event;\n        })(\"change\", function CpfCnpjComponent_Template_input_change_6_listener($event) {\n          return ctx.onChangeTipo($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(7, \"\\xA0CNPJ? \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(8, CpfCnpjComponent_input_8_Template, 1, 6, \"input\", 5);\n        i0.ɵɵtemplate(9, CpfCnpjComponent_input_9_Template, 1, 6, \"input\", 5);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.vm.form);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.tpCTRLcpfCnpj)(\"value\", 1)(\"ngModelOptions\", i0.ɵɵpureFunction0(9, _c1));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.tpCTRLcpfCnpj)(\"value\", 2)(\"ngModelOptions\", i0.ɵɵpureFunction0(10, _c1));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.tpCTRLcpfCnpj == 1 || !ctx.tpCTRLcpfCnpj);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.tpCTRLcpfCnpj == 2);\n      }\n    },\n    directives: [i1.NgControlStatusGroup, i1.FormGroupDirective, i1.RadioControlValueAccessor, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgModel, i2.NgIf, i1.RequiredValidator, i1.FormControlName, i3.MaskedInputDirective],\n    encapsulation: 2\n  });\n  return CpfCnpjComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}