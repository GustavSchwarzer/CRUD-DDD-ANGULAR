{"ast":null,"code":"import _classCallCheck from \"C:\\\\projetos\\\\seed-dotnet6.0angular13\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\projetos\\\\seed-dotnet6.0angular13\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport _get from \"C:\\\\projetos\\\\seed-dotnet6.0angular13\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\get.js\";\nimport _getPrototypeOf from \"C:\\\\projetos\\\\seed-dotnet6.0angular13\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\getPrototypeOf.js\";\nimport _inherits from \"C:\\\\projetos\\\\seed-dotnet6.0angular13\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\inherits.js\";\nimport _createSuper from \"C:\\\\projetos\\\\seed-dotnet6.0angular13\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createSuper.js\";\nimport { Observable } from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { ApiService } from '../../common/services/api.service';\nimport { ServiceBase } from '../../common/services/service.base';\nimport { ViewModel } from '../../common/model/viewmodel';\nimport { GlobalService } from '../../global.service';\nimport { SampleItemServiceFields } from './sampleitem.service.fields';\nimport { GlobalServiceCulture } from '../../global.service.culture';\nimport { MainService } from '../main.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../common/services/api.service\";\nimport * as i2 from \"./sampleitem.service.fields\";\nimport * as i3 from \"../../global.service.culture\";\nimport * as i4 from \"../main.service\";\nexport var SampleItemService = /*#__PURE__*/(function () {\n  var SampleItemService = /*#__PURE__*/function (_ServiceBase) {\n    _inherits(SampleItemService, _ServiceBase);\n\n    var _super = _createSuper(SampleItemService);\n\n    function SampleItemService(api, serviceFields, globalServiceCulture, mainService) {\n      var _this;\n\n      _classCallCheck(this, SampleItemService);\n\n      _this = _super.call(this);\n      _this.api = api;\n      _this.serviceFields = serviceFields;\n      _this.globalServiceCulture = globalServiceCulture;\n      _this.mainService = mainService;\n      _this._form = _this.serviceFields.getFormFields();\n      return _this;\n    }\n\n    _createClass(SampleItemService, [{\n      key: \"initVM\",\n      value: function initVM() {\n        return new ViewModel({\n          mostrarFiltros: false,\n          actionTitle: \"SampleItem\",\n          actionDescription: \"\",\n          key: this.serviceFields.getKey(),\n          downloadUri: GlobalService.getEndPoints().DOWNLOAD,\n          filterResult: [],\n          modelFilter: {},\n          summary: {},\n          model: {},\n          details: {},\n          infos: this.getInfos(),\n          grid: this.getInfoGrid(this.getInfos()),\n          gridOriginal: this.getInfoGrid(this.serviceFields.getInfosFields()),\n          generalInfo: this.mainService.getInfos(),\n          form: this._form,\n          masks: this.masksConfig(),\n          manterTelaAberta: false,\n          navigationModal: true\n        });\n      }\n    }, {\n      key: \"getInfos\",\n      value: function getInfos() {\n        return this.serviceFields.getInfosFields();\n      }\n    }, {\n      key: \"getInfoGrid\",\n      value: function getInfoGrid(infos) {\n        return _get(_getPrototypeOf(SampleItemService.prototype), \"getInfoGrid\", this).call(this, infos);\n      }\n    }, {\n      key: \"updateCulture\",\n      value: function updateCulture() {\n        var culture = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        return this.getInfosTranslated(this.globalServiceCulture.defineCulture(culture));\n      }\n    }, {\n      key: \"updateCultureMain\",\n      value: function updateCultureMain() {\n        var culture = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        return this.mainService.getInfosTranslated(this.globalServiceCulture.defineCulture(culture));\n      }\n    }, {\n      key: \"getInfosTranslated\",\n      value: function getInfosTranslated(culture) {\n        return this.globalServiceCulture.getInfosTranslatedStrategy('SampleItem', culture, this.getInfos(), []);\n      }\n    }, {\n      key: \"get\",\n      value: function get(filters) {\n        return this.api.setResource('SampleItem').get(filters);\n      }\n    }, {\n      key: \"getDataCustom\",\n      value: function getDataCustom(filters) {\n        return this.api.setResource('SampleItem').getDataCustom(filters);\n      }\n    }, {\n      key: \"getDataListCustom\",\n      value: function getDataListCustom(filters) {\n        return this.api.setResource('SampleItem').getDataListCustom(filters);\n      }\n    }, {\n      key: \"getDataListCustomPaging\",\n      value: function getDataListCustomPaging(filters) {\n        return this.api.setResource('SampleItem').getDataListCustomPaging(filters);\n      }\n    }, {\n      key: \"getDataItem\",\n      value: function getDataItem(filters) {\n        return this.api.setResource('SampleItem').getDataitem(filters);\n      }\n    }, {\n      key: \"save\",\n      value: function save(model) {\n        if (model.sampleItemId) {\n          return this.api.setResource('SampleItem').put(model);\n        }\n\n        return this.api.setResource('SampleItem').post(model);\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(model) {\n        return this.api.setResource('SampleItem').delete(model);\n      }\n    }, {\n      key: \"export\",\n      value: function _export(filters) {\n        return this.api.setResource('SampleItem').export(filters);\n      }\n    }]);\n\n    return SampleItemService;\n  }(ServiceBase);\n\n  SampleItemService.ɵfac = function SampleItemService_Factory(t) {\n    return new (t || SampleItemService)(i0.ɵɵinject(i1.ApiService), i0.ɵɵinject(i2.SampleItemServiceFields), i0.ɵɵinject(i3.GlobalServiceCulture), i0.ɵɵinject(i4.MainService));\n  };\n\n  SampleItemService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SampleItemService,\n    factory: SampleItemService.ɵfac\n  });\n  return SampleItemService;\n})();","map":null,"metadata":{},"sourceType":"module"}