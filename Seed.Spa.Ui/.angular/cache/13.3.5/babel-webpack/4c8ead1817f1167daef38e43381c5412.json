{"ast":null,"code":"import _classCallCheck from \"C:\\\\projetos\\\\seed-dotnet6.0angular13\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\projetos\\\\seed-dotnet6.0angular13\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { AuthService } from '../common/services/auth.service';\nimport { GlobalServiceCulture } from '../global.service.culture';\nimport { GlobalService } from '../global.service';\nimport { MainService } from './main.service';\n\nvar MainComponent = /*#__PURE__*/function () {\n  function MainComponent(authService, globalServiceCulture, mainService, sanitizer, router) {\n    var _this = this;\n\n    _classCallCheck(this, MainComponent);\n\n    this.authService = authService;\n    this.globalServiceCulture = globalServiceCulture;\n    this.mainService = mainService;\n    this.sanitizer = sanitizer;\n    this.router = router;\n    this.perfectScrollbarConfig = {\n      suppressScrollX: true\n    };\n    this.vm = {};\n    this.menuIsOpen = true;\n    this.vm.generalInfo = this.mainService.getInfosFields();\n    this.vm.downloadUri = GlobalService.getEndPoints().DOWNLOAD;\n    this.vm.avatar = null;\n    this.mainService.updateCulture(this.vm);\n    GlobalService.getChangeCultureEmitter().subscribe(function (culture) {\n      _this.mainService.updateCulture(_this.vm, culture);\n    });\n  }\n\n  _createClass(MainComponent, [{\n    key: \"onUpdateCulture\",\n    value: function onUpdateCulture(event, culture) {\n      event.preventDefault();\n      this.mainService.updateCulture(this.vm, culture);\n      GlobalService.getChangeCultureEmitter().emit(culture);\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this2 = this;\n\n      this.avatarJson = {\n        src: this.vm.downloadUri + \"/usuario/\" + (this.vm.avatar || 'vazio.png'),\n        width: 200,\n        height: 46,\n        alt: 'CoreUI Logo'\n      };\n      this.authService.getCurrentUser(function (result, firstTime) {\n        if (result.isAuth) {\n          if (result.claims.name != null) {\n            _this2.vm.userName = result.claims.name;\n          }\n\n          if (result.claims.role != null) {\n            _this2.vm.userRole = result.claims.role;\n          }\n\n          if (result.claims.tools != null) {\n            _this2.vm.menu = _this2.mainService.transformTools(result.claims.tools);\n          }\n\n          if (result.claims.avatar != null) {\n            _this2.vm.avatar = result.claims.avatar;\n          }\n\n          if (result.claims.typerole != null) {\n            _this2.vm.typerole = result.claims.typerole;\n            _this2.vm.userRole = _this2.vm.userRole + \"- [\" + _this2.vm.typerole + \"]\";\n          }\n\n          if (firstTime) _this2.router.navigate([\"/home\"]);\n        }\n      });\n    }\n  }, {\n    key: \"onToggleMenu\",\n    value: function onToggleMenu(e) {\n      this.menuIsOpen = !this.menuIsOpen;\n    }\n  }, {\n    key: \"onLogout\",\n    value: function onLogout(e) {\n      var _this3 = this;\n\n      e.preventDefault();\n      var conf = GlobalService.operationExecutedParameters(\"confirm-modal\", function () {\n        _this3.mainService.resetCulture();\n\n        _this3.authService.logout();\n      }, \"Deseja Realmente Sair do Sistema\");\n      GlobalService.getOperationExecutedEmitter().emit(conf);\n    }\n  }, {\n    key: \"onFilter\",\n    value: function onFilter(filter) {}\n  }]);\n\n  return MainComponent;\n}();\n\nMainComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css'],\n  providers: [GlobalServiceCulture, MainService]\n}), __metadata(\"design:paramtypes\", [AuthService, GlobalServiceCulture, MainService, DomSanitizer, Router])], MainComponent);\nexport { MainComponent };","map":null,"metadata":{},"sourceType":"module"}