{"ast":null,"code":"import _classCallCheck from \"C:\\\\projetos\\\\seed-dotnet6.0angular13\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\projetos\\\\seed-dotnet6.0angular13\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar _a;\n\nimport { Directive, ElementRef, Renderer, Input } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { ApiService } from '../services/api.service';\n\nvar DomElemetAppendDirective = /*#__PURE__*/function () {\n  function DomElemetAppendDirective(_elemetRef, _renderer, api, ngModel) {\n    _classCallCheck(this, DomElemetAppendDirective);\n\n    this._elemetRef = _elemetRef;\n    this._renderer = _renderer;\n    this.api = api;\n    this.ngModel = ngModel;\n  }\n\n  _createClass(DomElemetAppendDirective, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.renderTree(this.dataitem);\n    }\n  }, {\n    key: \"renderTree\",\n    value: function renderTree(tree) {\n      for (var item in tree) {\n        if (tree[item].tree) {\n          this.renderTree(tree[item].tree);\n        }\n\n        var result = this._elemetRef.nativeElement.insertAdjacentHTML(\"beforeend\", \"<li>\" + tree[item].name + \"</li>\");\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this._notificationEmitter) this._notificationEmitter.unsubscribe();\n    }\n  }]);\n\n  return DomElemetAppendDirective;\n}();\n\n__decorate([Input(), __metadata(\"design:type\", Array)], DomElemetAppendDirective.prototype, \"dataitem\", void 0);\n\nDomElemetAppendDirective = __decorate([Directive({\n  selector: '[dom-element-append]',\n  providers: [NgModel]\n}), __metadata(\"design:paramtypes\", [ElementRef, typeof (_a = typeof Renderer !== \"undefined\" && Renderer) === \"function\" ? _a : Object, ApiService, NgModel])], DomElemetAppendDirective);\nexport { DomElemetAppendDirective };","map":null,"metadata":{},"sourceType":"module"}