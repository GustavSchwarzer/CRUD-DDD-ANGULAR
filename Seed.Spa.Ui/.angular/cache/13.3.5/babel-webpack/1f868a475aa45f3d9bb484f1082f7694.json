{"ast":null,"code":"import _classCallCheck from \"C:\\\\projetos\\\\seed-dotnet6.0angular13\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\projetos\\\\seed-dotnet6.0angular13\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { EventEmitter } from '@angular/core';\nimport { ViewModel } from '../model/viewmodel';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../directives/cep.directive\";\nimport * as i3 from \"angular2-text-mask\";\n\nvar _c0 = function _c0(a0) {\n  return {\n    mask: a0\n  };\n};\n\nexport var CepComponent = /*#__PURE__*/(function () {\n  var CepComponent = /*#__PURE__*/function () {\n    function CepComponent() {\n      _classCallCheck(this, CepComponent);\n\n      this.cepChange = new EventEmitter();\n    }\n\n    _createClass(CepComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        if (this.vm.model.city && this.vm.model.state) {\n          this.vm.model.disabledCity = true;\n          this.vm.model.disabledState = true;\n        }\n      }\n    }, {\n      key: \"onFindCep\",\n      value: function onFindCep(data) {\n        this.vm.model.logradouro = data.logradouro;\n        this.vm.model.cidade = data.cidade;\n        this.vm.model.uf = data.uf;\n        this.vm.model.bairro = data.bairro;\n        this.vm.model.address = data.logradouro;\n        this.vm.model.city = data.cidade;\n        this.vm.model.state = data.uf;\n        this.vm.model.neighborhood = data.bairro;\n\n        if (data.cidade && data.uf) {\n          this.vm.model.disabledCidade = true;\n          this.vm.model.disabledCity = true;\n          this.vm.model.disabledUf = true;\n          this.vm.model.disabledState = true;\n        } else {\n          this.vm.model.disabledCidade = false;\n          this.vm.model.disabledCity = false;\n          this.vm.model.disabledUf = false;\n          this.vm.model.disabledState = false;\n        }\n\n        this.cepChange.emit(data);\n      }\n    }]);\n\n    return CepComponent;\n  }();\n\n  CepComponent.ɵfac = function CepComponent_Factory(t) {\n    return new (t || CepComponent)();\n  };\n\n  CepComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CepComponent,\n    selectors: [[\"cep\"]],\n    inputs: {\n      vm: \"vm\",\n      fieldName: \"fieldName\",\n      isRequired: \"isRequired\"\n    },\n    outputs: {\n      cepChange: \"cepChange\"\n    },\n    decls: 2,\n    vars: 8,\n    consts: [[3, \"formGroup\"], [\"type\", \"text\", \"cepFinder\", \"\", 1, \"form-control\", 3, \"ngModel\", \"name\", \"formControlName\", \"textMask\", \"required\", \"ngModelChange\", \"onfind\"]],\n    template: function CepComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function CepComponent_Template_input_ngModelChange_1_listener($event) {\n          return ctx.vm.model[ctx.fieldName] = $event;\n        })(\"onfind\", function CepComponent_Template_input_onfind_1_listener($event) {\n          return ctx.onFindCep($event);\n        });\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.vm.form);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"name\", ctx.fieldName);\n        i0.ɵɵpropertyInterpolate(\"formControlName\", ctx.fieldName);\n        i0.ɵɵpropertyInterpolate(\"required\", ctx.isRequired);\n        i0.ɵɵproperty(\"ngModel\", ctx.vm.model[ctx.fieldName])(\"textMask\", i0.ɵɵpureFunction1(6, _c0, ctx.vm.masks.maskCEP));\n      }\n    },\n    directives: [i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i2.CepDirective, i1.FormControlName, i3.MaskedInputDirective, i1.RequiredValidator],\n    encapsulation: 2\n  });\n  return CepComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}