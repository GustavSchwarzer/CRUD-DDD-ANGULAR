{"ast":null,"code":"import _classCallCheck from \"C:\\\\projetos\\\\seed-dotnet6.0angular13\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\projetos\\\\seed-dotnet6.0angular13\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport { GlobalService } from \"../../global.service\";\nimport { ApiService } from \"../../common/services/api.service\";\nimport { ViewModel } from '../model/viewmodel';\nimport { NotificationsService } from 'angular2-notifications';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../common/services/api.service\";\nimport * as i2 from \"angular2-notifications\";\nvar _c0 = [\"file\"];\n\nfunction UploadCustomComponent_hr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"hr\");\n  }\n}\n\nfunction UploadCustomComponent_div_15_input_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 15);\n  }\n\n  if (rf & 2) {\n    var ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵpropertyInterpolate(\"id\", ctx_r7.fileName);\n    i0.ɵɵpropertyInterpolate3(\"value\", \"\", ctx_r7.downloadUri, \"\", ctx_r7.folder, \"/\", ctx_r7.fileName, \"\");\n  }\n}\n\nfunction UploadCustomComponent_div_15_a_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 16);\n    i0.ɵɵtext(1, \"Ver\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵpropertyInterpolate3(\"href\", \"\", ctx_r8.downloadUri, \"\", ctx_r8.folder, \"/\", ctx_r8.fileName, \"\", i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction UploadCustomComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtemplate(1, UploadCustomComponent_div_15_input_1_Template, 1, 4, \"input\", 13);\n    i0.ɵɵelementStart(2, \"span\", 6)(3, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function UploadCustomComponent_div_15_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r10);\n      var ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.copyToClipboard(ctx_r9.fileName);\n    });\n    i0.ɵɵtext(4, \"Copy\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, UploadCustomComponent_div_15_a_5_Template, 2, 3, \"a\", 14);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.fileName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"hidden\", !ctx_r2.fileName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.fileName);\n  }\n}\n\nfunction UploadCustomComponent_hr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"hr\");\n  }\n}\n\nfunction UploadCustomComponent_img_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 17);\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵpropertyInterpolate3(\"src\", \"\", ctx_r4.downloadUri, \"\", ctx_r4.folder, \"/\", ctx_r4.fileName, \"\", i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction UploadCustomComponent_hr_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"hr\");\n  }\n}\n\nfunction UploadCustomComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"p\", 19);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"p\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r6.pasteAreaText);\n  }\n}\n\nexport var UploadCustomComponent = /*#__PURE__*/(function () {\n  var UploadCustomComponent = /*#__PURE__*/function () {\n    function UploadCustomComponent(api, notificationsService, ref) {\n      _classCallCheck(this, UploadCustomComponent);\n\n      this.api = api;\n      this.notificationsService = notificationsService;\n      this.ref = ref;\n      this.onChangeUploadExternal = new EventEmitter();\n      this.downloadUri = GlobalService.getEndPoints().DOWNLOAD;\n      this.fileUri = this.downloadUri + this.folder + \"/\" + this.fileName;\n      this.enabledUploadExternal = false;\n      this.accept = \"*.*\";\n      this.rename = true;\n      this.pasteArea = false;\n      this.isImage = false;\n      this.enableCopyLink = false;\n      this.pasteAreaText = \"Arraste e solte arquivos ou cole PrintScreens de telas\";\n      this.maxsize = 2;\n    }\n\n    _createClass(UploadCustomComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var _this = this;\n\n        this.edit();\n        this._notificationEmitter = GlobalService.getNotificationEmitter().subscribe(function (not) {\n          if (not.event == \"edit\") {\n            _this.edit();\n          }\n\n          if (not.event == \"init\") {\n            _this.fileNameOld = null;\n            _this.fileName = null;\n          }\n        });\n\n        if (this.pasteArea) {\n          var area = document.getElementById(\"upload-component-paste-area\");\n          area.addEventListener(\"paste\", function (e) {\n            return _this.handlePaste(e);\n          });\n\n          area.ondragover = function () {\n            _this.className = 'upload-component-paste-area';\n            return false;\n          };\n\n          area.ondrop = function (e) {\n            _this.handleDrop(e);\n          };\n        }\n      }\n    }, {\n      key: \"edit\",\n      value: function edit() {\n        this.fileNameOld = this.vm.model[this.ctrlName];\n        this.fileName = this.vm.model[this.ctrlName];\n        this.verifyFileName(this.fileName);\n      }\n    }, {\n      key: \"copyToClipboard\",\n      value: function copyToClipboard(file) {\n        var copyText = document.getElementById(file);\n        copyText.select();\n        document.execCommand(\"Copy\");\n      }\n    }, {\n      key: \"handleDrop\",\n      value: function handleDrop(e) {\n        e.preventDefault();\n        e.dataTransfer.files;\n        this.uploadFileOnPaste(e.dataTransfer.files[0]);\n      }\n    }, {\n      key: \"handlePaste\",\n      value: function handlePaste(e) {\n        for (var i = 0; i < e.clipboardData.items.length; i++) {\n          var item = e.clipboardData.items[i];\n          this.uploadFileOnPaste(item.getAsFile());\n        }\n      }\n    }, {\n      key: \"uploadFileOnPaste\",\n      value: function uploadFileOnPaste(file) {\n        this.fileNameOld = file.name;\n        if (this.enabledUploadExternal) this.uploadCustom(file, this.rename);else this.uploadDefault(file, this.rename);\n      }\n    }, {\n      key: \"ngAfterViewChecked\",\n      value: function ngAfterViewChecked() {\n        this.ref.detectChanges();\n      }\n    }, {\n      key: \"onChange\",\n      value: function onChange(event) {\n        if (event.target.files.length == 0) return false;\n        var file = event.target.files[0];\n        this.fileNameOld = file.name;\n\n        if (this.maxsize) {\n          if (file.size > this.maxsize * 1024 * 1000) {\n            this.notificationsService.error('Atenção', 'A imagem é muito grande', {\n              timeOut: 5000,\n              showProgressBar: true,\n              pauseOnHover: true,\n              clickToClose: false\n            });\n            event.target.files = [];\n            return false;\n          }\n        }\n\n        if (this.enabledUploadExternal) return this.uploadCustom(file, this.rename);\n        return this.uploadDefault(file, this.rename);\n      }\n    }, {\n      key: \"uploadCustom\",\n      value: function uploadCustom(file, rename) {\n        this.onChangeUploadExternal.emit(file);\n        this.vm.model[this.ctrlName] = file.name;\n        this.fileName = file.name;\n        this.pasteArea = false;\n        this.verifyFileType(file);\n        return true;\n      }\n    }, {\n      key: \"verifyFileType\",\n      value: function verifyFileType(file) {\n        this.isImage = false;\n        if (file.type == \"image/png\") this.isImage = true;\n        if (file.type == \"image/jpeg\") this.isImage = true;\n        if (file.type == \"image/gif\") this.isImage = true;\n      }\n    }, {\n      key: \"verifyFileName\",\n      value: function verifyFileName(fileName) {\n        if (fileName) {\n          this.isImage = false;\n          if (fileName.endsWith(\"png\")) this.isImage = true;\n          if (fileName.endsWith(\"jpg\")) this.isImage = true;\n          if (fileName.endsWith(\"gif\")) this.isImage = true;\n        }\n      }\n    }, {\n      key: \"uploadDefault\",\n      value: function uploadDefault(file, rename) {\n        var _this2 = this;\n\n        this.api.setResource('upload').upload(file, this.folder, rename).subscribe(function (result) {\n          _this2.vm.model[_this2.ctrlName] = result.data[0];\n          _this2.fileName = result.data[0];\n          _this2.pasteArea = false;\n\n          _this2.verifyFileType(file);\n        });\n        return true;\n      }\n    }, {\n      key: \"onDelete\",\n      value: function onDelete() {\n        var _this3 = this;\n\n        this.api.setResource('upload').deleteUpload(this.folder, this.fileName).subscribe(function () {\n          _this3.reset();\n        });\n      }\n    }, {\n      key: \"reset\",\n      value: function reset() {\n        this.fileUpload.nativeElement.value = '';\n        this.vm.model[this.ctrlName] = null;\n        this.fileName = null;\n        this.fileNameOld = null;\n      }\n    }, {\n      key: \"ngOnChanges\",\n      value: function ngOnChanges() {\n        this.ref.detectChanges();\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        if (this._notificationEmitter) this._notificationEmitter.unsubscribe();\n      }\n    }]);\n\n    return UploadCustomComponent;\n  }();\n\n  UploadCustomComponent.ɵfac = function UploadCustomComponent_Factory(t) {\n    return new (t || UploadCustomComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.NotificationsService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  UploadCustomComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UploadCustomComponent,\n    selectors: [[\"upload-custom\"]],\n    viewQuery: function UploadCustomComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileUpload = _t.first);\n      }\n    },\n    inputs: {\n      label: \"label\",\n      accept: \"accept\",\n      ctrlName: \"ctrlName\",\n      vm: \"vm\",\n      folder: \"folder\",\n      enabledUploadExternal: \"enabledUploadExternal\",\n      rename: \"rename\",\n      pasteArea: \"pasteArea\",\n      pasteAreaText: \"pasteAreaText\",\n      enableCopyLink: \"enableCopyLink\",\n      maxsize: \"maxsize\"\n    },\n    outputs: {\n      onChangeUploadExternal: \"onChangeUploadExternal\"\n    },\n    features: [i0.ɵɵProvidersFeature([ApiService]), i0.ɵɵNgOnChangesFeature],\n    decls: 20,\n    vars: 13,\n    consts: [[1, \"row\"], [1, \"col-md-12\", 3, \"formGroup\"], [\"type\", \"file\", \"hidden\", \"\", 3, \"accept\", \"name\", \"change\"], [\"file\", \"\"], [1, \"input-group\"], [\"type\", \"text\", \"readonly\", \"readonly\", \"placeholder\", \"Selecionar arquivo...\", 1, \"form-control\", 3, \"ngModel\", \"formControlName\", \"ngModelChange\"], [1, \"btn-group\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 2, \"width\", \"100px\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 2, \"width\", \"100px\", 3, \"hidden\", \"click\"], [4, \"ngIf\"], [\"class\", \"input-group\", 4, \"ngIf\"], [\"style\", \"max-width:100%\", 3, \"src\", 4, \"ngIf\"], [\"class\", \"upload-component-paste-area upload-component-drop-area mt-2\", \"id\", \"upload-component-paste-area\", 4, \"ngIf\"], [\"type\", \"text\", \"class\", \"form-control\", 3, \"id\", \"value\", 4, \"ngIf\"], [\"class\", \"btn btn-secondary\", \"target\", \"_blank\", \"style\", \"width:100px\", 3, \"href\", 4, \"ngIf\"], [\"type\", \"text\", 1, \"form-control\", 3, \"id\", \"value\"], [\"target\", \"_blank\", 1, \"btn\", \"btn-secondary\", 2, \"width\", \"100px\", 3, \"href\"], [2, \"max-width\", \"100%\", 3, \"src\"], [\"id\", \"upload-component-paste-area\", 1, \"upload-component-paste-area\", \"upload-component-drop-area\", \"mt-2\"], [1, \"muted\"]],\n    template: function UploadCustomComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        var _r11 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"section\", 1)(2, \"label\");\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"br\");\n        i0.ɵɵelementStart(5, \"input\", 2, 3);\n        i0.ɵɵlistener(\"change\", function UploadCustomComponent_Template_input_change_5_listener($event) {\n          return ctx.onChange($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 4)(8, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function UploadCustomComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.fileNameOld = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"span\", 6)(10, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function UploadCustomComponent_Template_button_click_10_listener() {\n          i0.ɵɵrestoreView(_r11);\n\n          var _r0 = i0.ɵɵreference(6);\n\n          return _r0.click();\n        });\n        i0.ɵɵtext(11, \"Procurar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function UploadCustomComponent_Template_button_click_12_listener() {\n          return ctx.onDelete();\n        });\n        i0.ɵɵtext(13, \"Excluir\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(14, UploadCustomComponent_hr_14_Template, 1, 0, \"hr\", 9);\n        i0.ɵɵtemplate(15, UploadCustomComponent_div_15_Template, 6, 3, \"div\", 10);\n        i0.ɵɵtemplate(16, UploadCustomComponent_hr_16_Template, 1, 0, \"hr\", 9);\n        i0.ɵɵtemplate(17, UploadCustomComponent_img_17_Template, 1, 3, \"img\", 11);\n        i0.ɵɵtemplate(18, UploadCustomComponent_hr_18_Template, 1, 0, \"hr\", 9);\n        i0.ɵɵtemplate(19, UploadCustomComponent_div_19_Template, 4, 1, \"div\", 12);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.vm.form);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.label);\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"accept\", ctx.accept);\n        i0.ɵɵpropertyInterpolate(\"name\", ctx.ctrlName);\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"formControlName\", ctx.ctrlName);\n        i0.ɵɵproperty(\"ngModel\", ctx.fileNameOld);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"hidden\", !ctx.fileName);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.fileName && ctx.isImage);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.enableCopyLink);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.fileName && ctx.enableCopyLink);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.fileName && ctx.isImage);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.fileName && ctx.isImage);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.pasteArea);\n      }\n    },\n    encapsulation: 2\n  });\n  return UploadCustomComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}