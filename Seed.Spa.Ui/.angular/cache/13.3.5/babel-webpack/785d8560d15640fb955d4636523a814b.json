{"ast":null,"code":"import _classCallCheck from \"C:\\\\projetos\\\\seed-dotnet6.0angular13\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\projetos\\\\seed-dotnet6.0angular13\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { ElementRef } from '@angular/core';\nimport * as i0 from \"@angular/core\";\n\nfunction TreeViewComponent_li_1_tree_view_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tree-view\", 3);\n  }\n\n  if (rf & 2) {\n    var node_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"treeData\", node_r1.children)(\"nodeParent\", node_r1);\n  }\n}\n\nfunction TreeViewComponent_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 1);\n    i0.ɵɵlistener(\"dragstart\", function TreeViewComponent_li_1_Template_li_dragstart_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      var ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.drag($event);\n    })(\"drop\", function TreeViewComponent_li_1_Template_li_drop_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      var ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.drop($event);\n    })(\"dragover\", function TreeViewComponent_li_1_Template_li_dragover_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      var ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.allowDrop($event);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, TreeViewComponent_li_1_tree_view_2_Template, 1, 2, \"tree-view\", 2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var node_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"id\", node_r1.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", node_r1.name, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", node_r1.children);\n  }\n}\n\nexport var TreeViewComponent = /*#__PURE__*/(function () {\n  var TreeViewComponent = /*#__PURE__*/function () {\n    function TreeViewComponent(_elemetRef) {\n      _classCallCheck(this, TreeViewComponent);\n\n      this._elemetRef = _elemetRef;\n    }\n\n    _createClass(TreeViewComponent, [{\n      key: \"allowDrop\",\n      value: function allowDrop(ev) {\n        ev.preventDefault();\n      }\n    }, {\n      key: \"drag\",\n      value: function drag(ev) {\n        ev.dataTransfer.setData(\"id-tree\", ev.target.id);\n      }\n    }, {\n      key: \"drop\",\n      value: function drop(ev) {\n        ev.preventDefault();\n        var data = ev.dataTransfer.getData(\"id-tree\");\n        ev.target.appendChild(document.getElementById(data));\n      }\n    }]);\n\n    return TreeViewComponent;\n  }();\n\n  TreeViewComponent.ɵfac = function TreeViewComponent_Factory(t) {\n    return new (t || TreeViewComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  TreeViewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TreeViewComponent,\n    selectors: [[\"tree-view\"]],\n    inputs: {\n      treeData: \"treeData\",\n      nodeParent: \"nodeParent\"\n    },\n    decls: 2,\n    vars: 1,\n    consts: [[\"draggable\", \"true\", 3, \"id\", \"dragstart\", \"drop\", \"dragover\", 4, \"ngFor\", \"ngForOf\"], [\"draggable\", \"true\", 3, \"id\", \"dragstart\", \"drop\", \"dragover\"], [3, \"treeData\", \"nodeParent\", 4, \"ngIf\"], [3, \"treeData\", \"nodeParent\"]],\n    template: function TreeViewComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ul\");\n        i0.ɵɵtemplate(1, TreeViewComponent_li_1_Template, 3, 3, \"li\", 0);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.treeData);\n      }\n    },\n    encapsulation: 2\n  });\n  return TreeViewComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}