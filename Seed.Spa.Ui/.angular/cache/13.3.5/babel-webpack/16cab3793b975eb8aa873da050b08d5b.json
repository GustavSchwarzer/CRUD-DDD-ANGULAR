{"ast":null,"code":"import _createClass from \"C:\\\\projetos\\\\seed-dotnet6.0angular13\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport _classCallCheck from \"C:\\\\projetos\\\\seed-dotnet6.0angular13\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Injector, ElementRef, TemplateRef, Injectable } from '@angular/core';\nimport { listenToTriggersV2, registerOutsideClick, registerEscClick } from 'ngx-bootstrap/utils';\nimport * as i1 from 'ngx-bootstrap/positioning';\n\nvar BsComponentRef = /*#__PURE__*/_createClass(function BsComponentRef() {\n  _classCallCheck(this, BsComponentRef);\n});\n/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\n\nvar ContentRef = /*#__PURE__*/_createClass(function ContentRef( // eslint-disable-next-line @typescript-eslint/no-explicit-any\nnodes, viewRef, // eslint-disable-next-line @typescript-eslint/no-explicit-any\ncomponentRef) {\n  _classCallCheck(this, ContentRef);\n\n  this.nodes = nodes;\n  this.viewRef = viewRef;\n  this.componentRef = componentRef;\n}); // todo: add delay support\n\n\nvar ComponentLoader = /*#__PURE__*/function () {\n  /**\n   * Do not use this directly, it should be instanced via\n   * `ComponentLoadFactory.attach`\n   * @internal\n   */\n  function ComponentLoader(_viewContainerRef, _renderer, _elementRef, _injector, _componentFactoryResolver, _ngZone, _applicationRef, _posService) {\n    _classCallCheck(this, ComponentLoader);\n\n    this._viewContainerRef = _viewContainerRef;\n    this._renderer = _renderer;\n    this._elementRef = _elementRef;\n    this._injector = _injector;\n    this._componentFactoryResolver = _componentFactoryResolver;\n    this._ngZone = _ngZone;\n    this._applicationRef = _applicationRef;\n    this._posService = _posService;\n    this.onBeforeShow = new EventEmitter();\n    this.onShown = new EventEmitter();\n    this.onBeforeHide = new EventEmitter();\n    this.onHidden = new EventEmitter();\n    this._providers = [];\n    this._isHiding = false;\n    /**\n     * A selector used if container element was not found\n     */\n\n    this.containerDefaultSelector = 'body';\n    this._listenOpts = {};\n    this._globalListener = Function.prototype;\n  }\n\n  _createClass(ComponentLoader, [{\n    key: \"isShown\",\n    get: function get() {\n      if (this._isHiding) {\n        return false;\n      }\n\n      return !!this._componentRef;\n    }\n  }, {\n    key: \"attach\",\n    value: function attach(compType) {\n      this._componentFactory = this._componentFactoryResolver.resolveComponentFactory(compType);\n      return this;\n    } // todo: add behaviour: to target element, `body`, custom element\n\n  }, {\n    key: \"to\",\n    value: function to(container) {\n      this.container = container || this.container;\n      return this;\n    }\n  }, {\n    key: \"position\",\n    value: function position(opts) {\n      if (!opts) {\n        return this;\n      }\n\n      this.attachment = opts.attachment || this.attachment;\n      this._elementRef = opts.target || this._elementRef;\n      return this;\n    }\n  }, {\n    key: \"provide\",\n    value: function provide(provider) {\n      this._providers.push(provider);\n\n      return this;\n    } // todo: appendChild to element or document.querySelector(this.container)\n\n  }, {\n    key: \"show\",\n    value: function show() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      this._subscribePositioning();\n\n      this._innerComponent = void 0;\n\n      if (!this._componentRef) {\n        this.onBeforeShow.emit();\n        this._contentRef = this._getContentRef(opts.content, opts.context, opts.initialState);\n        var injector = Injector.create({\n          providers: this._providers,\n          parent: this._injector\n        });\n\n        if (!this._componentFactory) {\n          return;\n        }\n\n        this._componentRef = this._componentFactory.create(injector, this._contentRef.nodes);\n\n        this._applicationRef.attachView(this._componentRef.hostView); // this._componentRef = this._viewContainerRef\n        //   .createComponent(this._componentFactory, 0, injector, this._contentRef.nodes);\n\n\n        this.instance = this._componentRef.instance;\n        Object.assign(this._componentRef.instance, opts);\n\n        if (this.container instanceof ElementRef) {\n          this.container.nativeElement.appendChild(this._componentRef.location.nativeElement);\n        }\n\n        if (typeof this.container === 'string' && typeof document !== 'undefined') {\n          var selectedElement = document.querySelector(this.container) || document.querySelector(this.containerDefaultSelector);\n\n          if (!selectedElement) {\n            return;\n          }\n\n          selectedElement.appendChild(this._componentRef.location.nativeElement);\n        }\n\n        if (!this.container && this._elementRef && this._elementRef.nativeElement.parentElement) {\n          this._elementRef.nativeElement.parentElement.appendChild(this._componentRef.location.nativeElement);\n        } // we need to manually invoke change detection since events registered\n        // via\n        // Renderer::listen() are not picked up by change detection with the\n        // OnPush strategy\n\n\n        if (this._contentRef.componentRef) {\n          this._innerComponent = this._contentRef.componentRef.instance;\n\n          this._contentRef.componentRef.changeDetectorRef.markForCheck();\n\n          this._contentRef.componentRef.changeDetectorRef.detectChanges();\n        }\n\n        this._componentRef.changeDetectorRef.markForCheck();\n\n        this._componentRef.changeDetectorRef.detectChanges();\n\n        this.onShown.emit(opts.id ? {\n          id: opts.id\n        } : this._componentRef.instance);\n      }\n\n      this._registerOutsideClick();\n\n      return this._componentRef;\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(id) {\n      var _a, _b, _c, _d, _e, _f;\n\n      if (!this._componentRef) {\n        return this;\n      }\n\n      this._posService.deletePositionElement(this._componentRef.location);\n\n      this.onBeforeHide.emit(this._componentRef.instance);\n      var componentEl = this._componentRef.location.nativeElement;\n      (_a = componentEl.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(componentEl);\n      (_c = (_b = this._contentRef) === null || _b === void 0 ? void 0 : _b.componentRef) === null || _c === void 0 ? void 0 : _c.destroy();\n\n      if (this._viewContainerRef && ((_d = this._contentRef) === null || _d === void 0 ? void 0 : _d.viewRef)) {\n        this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._contentRef.viewRef));\n      }\n\n      (_f = (_e = this._contentRef) === null || _e === void 0 ? void 0 : _e.viewRef) === null || _f === void 0 ? void 0 : _f.destroy();\n      this._contentRef = void 0;\n      this._componentRef = void 0;\n\n      this._removeGlobalListener();\n\n      this.onHidden.emit(id ? {\n        id: id\n      } : null);\n      return this;\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      if (this.isShown) {\n        this.hide();\n        return;\n      }\n\n      this.show();\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      if (this.isShown) {\n        this.hide();\n      }\n\n      this._unsubscribePositioning();\n\n      if (this._unregisterListenersFn) {\n        this._unregisterListenersFn();\n      }\n    }\n  }, {\n    key: \"listen\",\n    value: function listen(listenOpts) {\n      var _this = this;\n\n      var _a;\n\n      this.triggers = listenOpts.triggers || this.triggers;\n      this._listenOpts.outsideClick = listenOpts.outsideClick;\n      this._listenOpts.outsideEsc = listenOpts.outsideEsc;\n      listenOpts.target = listenOpts.target || ((_a = this._elementRef) === null || _a === void 0 ? void 0 : _a.nativeElement);\n\n      var hide = this._listenOpts.hide = function () {\n        return listenOpts.hide ? listenOpts.hide() : void _this.hide();\n      };\n\n      var show = this._listenOpts.show = function (registerHide) {\n        listenOpts.show ? listenOpts.show(registerHide) : _this.show(registerHide);\n        registerHide();\n      }; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n      var toggle = function toggle(registerHide) {\n        _this.isShown ? hide() : show(registerHide);\n      };\n\n      if (this._renderer) {\n        this._unregisterListenersFn = listenToTriggersV2(this._renderer, {\n          target: listenOpts.target,\n          triggers: listenOpts.triggers,\n          show: show,\n          hide: hide,\n          toggle: toggle\n        });\n      }\n\n      return this;\n    }\n  }, {\n    key: \"_removeGlobalListener\",\n    value: function _removeGlobalListener() {\n      if (this._globalListener) {\n        this._globalListener();\n\n        this._globalListener = Function.prototype;\n      }\n    }\n  }, {\n    key: \"attachInline\",\n    value: function attachInline(vRef, // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    template) {\n      if (vRef && template) {\n        this._inlineViewRef = vRef.createEmbeddedView(template);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"_registerOutsideClick\",\n    value: function _registerOutsideClick() {\n      var _this2 = this;\n\n      if (!this._componentRef || !this._componentRef.location) {\n        return;\n      } // why: should run after first event bubble\n\n\n      if (this._listenOpts.outsideClick) {\n        var target = this._componentRef.location.nativeElement;\n        setTimeout(function () {\n          if (_this2._renderer && _this2._elementRef) {\n            _this2._globalListener = registerOutsideClick(_this2._renderer, {\n              targets: [target, _this2._elementRef.nativeElement],\n              outsideClick: _this2._listenOpts.outsideClick,\n              hide: function hide() {\n                return _this2._listenOpts.hide && _this2._listenOpts.hide();\n              }\n            });\n          }\n        });\n      }\n\n      if (this._listenOpts.outsideEsc && this._renderer && this._elementRef) {\n        var _target = this._componentRef.location.nativeElement;\n        this._globalListener = registerEscClick(this._renderer, {\n          targets: [_target, this._elementRef.nativeElement],\n          outsideEsc: this._listenOpts.outsideEsc,\n          hide: function hide() {\n            return _this2._listenOpts.hide && _this2._listenOpts.hide();\n          }\n        });\n      }\n    }\n  }, {\n    key: \"getInnerComponent\",\n    value: function getInnerComponent() {\n      return this._innerComponent;\n    }\n  }, {\n    key: \"_subscribePositioning\",\n    value: function _subscribePositioning() {\n      var _this3 = this;\n\n      if (this._zoneSubscription || !this.attachment) {\n        return;\n      }\n\n      this.onShown.subscribe(function () {\n        var _a;\n\n        _this3._posService.position({\n          element: (_a = _this3._componentRef) === null || _a === void 0 ? void 0 : _a.location,\n          target: _this3._elementRef,\n          attachment: _this3.attachment,\n          appendToBody: _this3.container === 'body'\n        });\n      });\n      this._zoneSubscription = this._ngZone.onStable.subscribe(function () {\n        if (!_this3._componentRef) {\n          return;\n        }\n\n        _this3._posService.calcPosition();\n      });\n    }\n  }, {\n    key: \"_unsubscribePositioning\",\n    value: function _unsubscribePositioning() {\n      if (!this._zoneSubscription) {\n        return;\n      }\n\n      this._zoneSubscription.unsubscribe();\n\n      this._zoneSubscription = void 0;\n    }\n  }, {\n    key: \"_getContentRef\",\n    value: function _getContentRef( // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    content, // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    context, // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    initialState) {\n      if (!content) {\n        return new ContentRef([]);\n      }\n\n      if (content instanceof TemplateRef) {\n        if (this._viewContainerRef) {\n          var _viewRef = this._viewContainerRef.createEmbeddedView(content, context);\n\n          _viewRef.markForCheck();\n\n          return new ContentRef([_viewRef.rootNodes], _viewRef);\n        }\n\n        var viewRef = content.createEmbeddedView({});\n\n        this._applicationRef.attachView(viewRef);\n\n        return new ContentRef([viewRef.rootNodes], viewRef);\n      }\n\n      if (typeof content === 'function') {\n        var contentCmptFactory = this._componentFactoryResolver.resolveComponentFactory(content);\n\n        var modalContentInjector = Injector.create({\n          providers: this._providers,\n          parent: this._injector\n        });\n        var componentRef = contentCmptFactory.create(modalContentInjector);\n        Object.assign(componentRef.instance, initialState);\n\n        this._applicationRef.attachView(componentRef.hostView);\n\n        return new ContentRef([[componentRef.location.nativeElement]], componentRef.hostView, componentRef);\n      }\n\n      var nodes = this._renderer ? [this._renderer.createText(\"\".concat(content))] : [];\n      return new ContentRef([nodes]);\n    }\n  }]);\n\n  return ComponentLoader;\n}();\n\nvar ComponentLoaderFactory = /*#__PURE__*/(function () {\n  var ComponentLoaderFactory = /*#__PURE__*/function () {\n    function ComponentLoaderFactory(_componentFactoryResolver, _ngZone, _injector, _posService, _applicationRef) {\n      _classCallCheck(this, ComponentLoaderFactory);\n\n      this._componentFactoryResolver = _componentFactoryResolver;\n      this._ngZone = _ngZone;\n      this._injector = _injector;\n      this._posService = _posService;\n      this._applicationRef = _applicationRef;\n    }\n    /**\n     *\n     * @param _elementRef\n     * @param _viewContainerRef\n     * @param _renderer\n     */\n\n\n    _createClass(ComponentLoaderFactory, [{\n      key: \"createLoader\",\n      value: function createLoader(_elementRef, _viewContainerRef, _renderer) {\n        return new ComponentLoader(_viewContainerRef, _renderer, _elementRef, this._injector, this._componentFactoryResolver, this._ngZone, this._applicationRef, this._posService);\n      }\n    }]);\n\n    return ComponentLoaderFactory;\n  }();\n\n  ComponentLoaderFactory.ɵfac = function ComponentLoaderFactory_Factory(t) {\n    return new (t || ComponentLoaderFactory)(i0.ɵɵinject(i0.ComponentFactoryResolver), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(i1.PositioningService), i0.ɵɵinject(i0.ApplicationRef));\n  };\n\n  ComponentLoaderFactory.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ComponentLoaderFactory,\n    factory: ComponentLoaderFactory.ɵfac,\n    providedIn: 'root'\n  });\n  return ComponentLoaderFactory;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { BsComponentRef, ComponentLoader, ComponentLoaderFactory, ContentRef }; //# sourceMappingURL=ngx-bootstrap-component-loader.mjs.map","map":null,"metadata":{},"sourceType":"module"}